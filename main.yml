---
- name: Install and configure development environment
  hosts: localhost
  connection: local
  become: true

  vars:
    common_packages:
      vim: vim
      zsh: zsh
      git: git

  vars_prompt:
    - name: 'github_username'
      prompt: 'Enter your GitHub username'
      private: no

    - name: 'github_token'
      prompt: 'Enter your GitHub personal access token'
      private: no

    # - name: 'npm_username'
    #   prompt: 'Enter your npm username'
    #   private: no

    - name: 'npm_password'
      prompt: 'Enter your npm password'
      private: no

    # - name: 'npm_email'
    #   prompt: 'Enter your npm email'
    #   private: no

    - name: 'decryption_password'
      prompt: 'Enter decryption password for SSH keys'
      private: yes

  tasks:
    - name: Include OS-specific variables
      include_vars: 'TaskFiles/{{ ansible_os_family | lower }}.yml'

    - name: Combine package lists
      set_fact:
        packages: '{{ common_packages | combine(additional_packages | default({})) }}'

    - name: Include OS-specific tasks
      include_tasks: 'TaskFiles/{{ ansible_os_family | lower }}_tasks.yml'

    - name: Install Node.js and npm
      include_tasks: 'TaskFiles/node_install.yml'

    - name: Install Yarn
      npm:
        name: yarn
        global: yes

    - name: Install Oh My Zsh
      shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: '{{ ansible_env.HOME }}/.oh-my-zsh'

    - name: Check if dotfiles directory exists
      stat:
        path: '{{ ansible_env.HOME }}/dotfiles'
      register: dotfiles_dir
      tags: [dots remove]

    - name: Remove existing dotfiles directory
      file:
        path: '{{ ansible_env.HOME }}/dotfiles'
        state: absent
      when: dotfiles_dir.stat.exists
      tags: [dots remove]

    - name: Clone dotfiles bare repository
      shell: git clone --bare https://{{ github_username }}:{{ github_token }}@github.com/bcourtney5965/dotfiles.git {{ ansible_env.HOME }}/dotfiles
      args:
        creates: '{{ ansible_env.HOME }}/dotfiles/HEAD'

    - name: Clone dotfiles repository
      git:
        repo: 'https://{{ github_username }}:{{ github_token }}@github.com/bcourtney5965/dotfiles.git'
        dest: '{{ ansible_env.HOME }}/'
        version: main
      tags:
        [dots]

        # make "bin/config-init" script executable

    # - name: Run config-init script
    #   shell: bash {{ ansible_env.HOME }}/dotfiles/bin/config-init
    # UNCOMMMENT BELOW:
    # - name: Make scripts in bin directory executable
    #   file:
    #     path: '{{ item }}'
    #     mode: '0755'
    #   loop: "{{ lookup('fileglob', '{{ ansible_env.HOME }}/dotfiles/bin/*', wantlist=True) }}"

    # - name: Run config-init script
    #   shell: bash {{ ansible_env.HOME }}/dotfiles/bin/config-init

    - name: Decrypt SSH private key
      ansible.builtin.command:
        cmd: ansible-vault decrypt ~/.ssh/id_ed25519
      become: yes
      vars:
        ansible_become_pass: '{{ decryption_password }}'

    - name: Decrypt known_hosts file
      ansible.builtin.command:
        cmd: ansible-vault decrypt ~/.ssh/known_hosts
      become: yes
      vars:
        ansible_become_pass: '{{ decryption_password }}'

    - name: Set correct permissions on SSH files
      file:
        path: '{{ ansible_env.HOME }}/.ssh'
        state: directory
        mode: '0700'
        recurse: yes
      become: yes

    - name: Install VS Code
      include_tasks: TaskFiles/vscode_install.yml

    - name: Sign into GitHub in VS Code
      shell: code --install-extension GitHub.vscode-pull-request-github && code --add https://github.com/bcourtney5965/dotfiles

    - name: Install browsers
      include_tasks: TaskFiles/browser_install.yml

    - name: Install Docker
      include_tasks: TaskFiles/docker_install.yml

    - name: Setup dotfiles
      include_tasks: TaskFiles/dotfiles_setup.yml

    - name: Sign into Git
      shell: |
        git config --global user.name "{{ github_username }}"
        git config --global user.email "{{ npm_email }}"
        echo "{{ github_token }}" | gh auth login --with-token

    # revert to:     npm login --username="{{ npm_username }}   and     --email="{{ npm_email }}""
    - name: Sign into npm
      shell: |
        npm login --username="{{ github_username }}" --password="{{ npm_password }}" --email='{{ github_username }}@gmail.com'

    - name: Verify installations
      include_tasks: TaskFiles/verify_installations.yml
      tags: [verify]
